class Solution {
    public int compareVersion(String version1, String version2) {
        int n1 = version1.length();
        int n2 = version2.length();

        int p1 = 0, p2 = 0;

        while (p1 < n1 || p2 < n2) {
            int num1 = 0;
            while (p1 < n1 && version1.charAt(p1) != '.') {
                num1 = num1 * 10 + (version1.charAt(p1) - '0');
                p1++;
            }

            int num2 = 0;
            while (p2 < n2 && version2.charAt(p2) != '.') {
                num2 = num2 * 10 + (version2.charAt(p2) - '0');
                p2++;
            }

            if (num1 != num2) {
                return num1 > num2 ? 1 : -1;
            }
            p1++;  // skipping the .
            p2++;  // skipping the .
        }
        return 0;

        // String[] v1Parts = version1.split("\\.");
        // String[] v2Parts = version2.split("\\.");

        // int n1 = v1Parts.length;
        // int n2 = v2Parts.length;
        // int maxLen = Math.max(n1, n2);

        // for (int i = 0; i < maxLen; i++) {
        //     int num1 = i < n1 ? Integer.parseInt(v1Parts[i]) : 0;
        //     int num2 = i < n2 ? Integer.parseInt(v2Parts[i]) : 0;

        //     if (num1 > num2) return 1;
        //     if (num1 < num2) return -1;
        // }

        // return 0;
    }
}
