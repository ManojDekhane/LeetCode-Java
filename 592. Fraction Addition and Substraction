class Solution {
    public String fractionAddition(String expression) {
        int num = 0;
        int den = 1;

        int i = 0, n = expression.length();
        while (i < n) {
            boolean isNegative = false;
            int currNum = 0;
            int currDen = 0;
            char ch = expression.charAt(i);

            if (ch == '+' || ch == '-') {
                if (ch == '-') isNegative = true;
                i++;
            }

            // form the numerator
            int start = i;
            while (i < n && Character.isDigit(expression.charAt(i))) {
                i++;
            }
            currNum = Integer.parseInt(expression.substring(start, i));
            if (isNegative) currNum *= -1;

            i++;  // skip the /

            // form the denominator
            start = i;
            while (i < n && Character.isDigit(expression.charAt(i))) {
                i++;
            }
            currDen = Integer.parseInt(expression.substring(start, i));

            num = num * currDen + den * currNum;
            den = den * currDen;
        }
        int gcd = Math.abs(gcd(num, den));
        num /= gcd;
        den /= gcd;
        return num + "/" + den;
    }

    private int gcd(int a, int b) {
        if (a == 0) return b;
        return gcd(b % a, a);
    }

}
