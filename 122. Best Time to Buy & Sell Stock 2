class Solution {
    public int recursion(int index, int buy, int[] prices, int[][] dp) {
        if (index == prices.length) return 0;

        if (dp[index][buy] != -1) return dp[index][buy];

        int profit = 0;

        if (buy == 1) {
            profit = Math.max(-prices[index] + recursion(index + 1, 0, prices, dp), 0 + recursion(index + 1, 1, prices, dp));
        } else {
            profit = Math.max(prices[index] + recursion(index + 1, 1, prices, dp), 0 + recursion(index + 1, 0, prices, dp));
        }

        return dp[index][buy] = profit;
    }

    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n][2];

        for (int i = 0; i < n; i++) {
            dp[i][0] = -1;
            dp[i][1] = -1;
        }

        return recursion(0, 1, prices, dp);
    }
}
