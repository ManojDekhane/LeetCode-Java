class Solution {
    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (words.length != pattern.length()) return false;

        HashMap<Character, String> map = new HashMap<>();
        HashSet<String> usedWords = new HashSet<>();

        for (int i = 0; i < pattern.length(); i++) {
            char original = pattern.charAt(i);
            String replacementWord = words[i];

            if (!map.containsKey(original)) {
                if (!usedWords.contains(replacementWord)) {
                    map.put(original, replacementWord);
                    usedWords.add(replacementWord);
                } else {
                    return false;
                }
            } else {
                String replacedWord = map.get(original);
                if (!replacementWord.equals(replacedWord)) return false;
            }
        }
        return true;
    }
}
